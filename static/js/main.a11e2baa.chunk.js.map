{"version":3,"sources":["components/Counter.js","components/Field.js","utils/Timer.js","Game.js","index.js"],"names":["Counter","props","className","icon","value","description","Field","onClick","text","Timer","prefix","duration","callbacks","start","isRunning","console","log","timer","setInterval","update","startTime","Date","destroy","clearInterval","timerDidDestroy","timeLeft","elapsedTime","calcElapsedTime","calcTimeLeft","timerDidUpdate","this","Game","startGame","state","gameTimer","stopGame","gameCps","updateGameRecord","updateGameLastResult","cooldownTimer","setState","gameClicksCount","updateGameCps","gameElapsedTime","gameRecord","gameLastResult","updateClicksCount","handleFieldClick","generateFieldText","isCooldownTimerRunning","isGameTimerRunning","toFixed","forceUpdate","gameTimeLeft","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a11e2baa.chunk.js","sourcesContent":["import \"./Counter.css\";\r\n\r\nfunction Counter(props) {\r\n  return (\r\n    <div className=\"counter\">\r\n      <p>\r\n        {props.icon} {props.value}\r\n      </p>\r\n      <p>{props.description}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;","import \"./Field.css\";\r\n\r\nfunction Field(props) {\r\n  return (\r\n    <button className={props.className} onClick={props.onClick}>\r\n      {props.text}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Field;\r\n","class Timer {\r\n  constructor(prefix, duration, callbacks) {\r\n    this.prefix = prefix;\r\n    this.duration = duration;\r\n    this.isRunning = false;\r\n\r\n    if (callbacks) {\r\n      let { timerDidUpdate, timerDidDestroy } = callbacks;\r\n\r\n      this.timerDidUpdate = timerDidUpdate;\r\n      this.timerDidDestroy = timerDidDestroy;\r\n    }\r\n\r\n    this.timer = null;\r\n    this.startTime = null;\r\n    this.elapsedTime = null;\r\n    this.timeLeft = duration;\r\n  }\r\n\r\n  start = () => {\r\n    this.isRunning = true;\r\n    console.log(`${this.prefix} The timer was created.`);\r\n\r\n    this.timer = setInterval(this.update);\r\n    this.startTime = new Date();\r\n  };\r\n\r\n  destroy = () => {\r\n    this.isRunning = false;\r\n    console.log(`${this.prefix} The timer was destroyed.`);\r\n\r\n    clearInterval(this.timer);\r\n\r\n    if (this.timerDidDestroy) {\r\n      this.timerDidDestroy();\r\n    }\r\n\r\n    this.timer = null;\r\n    this.startTime = null;\r\n    this.timeLeft = this.duration;\r\n  };\r\n\r\n  update = () => {\r\n    this.elapsedTime = this.calcElapsedTime(this.startTime);\r\n    this.timeLeft = this.calcTimeLeft(this.duration, this.elapsedTime);\r\n\r\n    if (this.timerDidUpdate) {\r\n      this.timerDidUpdate();\r\n    }\r\n\r\n    if (!this.timeLeft) {\r\n      this.destroy();\r\n    }\r\n  };\r\n\r\n  calcElapsedTime = (startTime) => {\r\n    const currentTime = new Date();\r\n    return (currentTime - startTime) / 1000;\r\n  };\r\n\r\n  calcTimeLeft = (duration, elapsedTime) => {\r\n    const timeLeft = duration - elapsedTime;\r\n    return timeLeft > 0 ? timeLeft : 0;\r\n  };\r\n}\r\n\r\nexport default Timer;","import React from \"react\";\n\nimport Counter from \"./components/Counter\";\nimport Field from \"./components/Field\";\n\nimport \"./Game.css\";\n\nimport Timer from \"./utils/Timer.js\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gameTimer: new Timer(\"[GameTimer]\", 10, {\n        timerDidUpdate: this.updateGameCps,\n        timerDidDestroy: this.stopGame,\n      }),\n\n      cooldownTimer: new Timer(\"[CooldownTimer]\", 4, {\n        timerDidUpdate: () => this.forceUpdate(),\n        timerDidDestroy: () => this.forceUpdate(),\n      }),\n\n      // Stats & Results\n      gameCps: 0.0,\n      gameClicksCount: 0,\n      gameRecord: 0.0,\n      gameLastResult: 0.0,\n    };\n  }\n\n  startGame = () => {\n    console.log(\"[Game] The game started.\");\n\n    const gameTimer = this.state.gameTimer;\n    gameTimer.start();\n  };\n\n  stopGame = () => {\n    console.log(\"[Game] The game ended.\");\n\n    const gameCps = this.state.gameCps;\n    this.updateGameRecord(gameCps);\n    this.updateGameLastResult(gameCps);\n\n    const cooldownTimer = this.state.cooldownTimer;\n    cooldownTimer.start();\n\n    this.setState({\n      gameCps: 0,\n      gameClicksCount: 0,\n    });\n  };\n\n  // Stats\n  updateGameCps = () => {\n    const gameElapsedTime = this.state.gameTimer.elapsedTime;\n    const gameClicksCount = this.state.gameClicksCount;\n\n    const gameCps = gameClicksCount / gameElapsedTime;\n\n    this.setState({\n      gameCps: gameCps,\n    });\n  };\n\n  // Results\n  updateGameRecord = (gameCps) => {\n    const gameRecord = this.state.gameRecord;\n    this.setState({\n      gameRecord: gameCps > gameRecord ? gameCps : gameRecord,\n    });\n  };\n\n  updateGameLastResult = (gameCps) => {\n    this.setState({\n      gameLastResult: gameCps,\n    });\n  };\n\n  updateClicksCount = () => {\n    const gameClicksCount = this.state.gameClicksCount;\n\n    this.setState({\n      gameClicksCount: gameClicksCount + 1,\n    });\n  };\n\n  // Field\n  handleFieldClick = () => {\n    const cooldownTimer = this.state.cooldownTimer;\n    const isCooldownTimerRunning = cooldownTimer.isRunning;\n\n    if (isCooldownTimerRunning) {\n      return;\n    }\n\n    const gameTimer = this.state.gameTimer;\n    const isGameTimerRunning = gameTimer.isRunning;\n\n    if (!isGameTimerRunning) {\n      this.startGame();\n    }\n\n    this.updateClicksCount();\n  };\n\n  generateFieldText = () => {\n    const cooldownTimer = this.state.cooldownTimer;\n    const isCooldownTimerRunning = cooldownTimer.isRunning;\n\n    const gameTimer = this.state.gameTimer;\n    const isGameTimerRunning = gameTimer.isRunning;\n\n    return isCooldownTimerRunning\n      ? `‚õî –≤–æ—É-–≤–æ—É, –ø–æ–ª–µ–≥—á–µ (${cooldownTimer.timeLeft.toFixed(3)})`\n      : isGameTimerRunning\n      ? \"üèÉ‚Äç‚ôÇÔ∏è –Ω–∞–∂–∏–º–∞–π –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ\"\n      : \"üëá –Ω–∞–∂–º–∏, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É\";\n  };\n\n  render() {\n    const gameTimer = this.state.gameTimer;\n    const gameTimeLeft = gameTimer.timeLeft;\n\n    const gameCps = this.state.gameCps;\n    const gameClicksCount = this.state.gameClicksCount;\n    const gameRecord = this.state.gameRecord;\n    const gameLastResult = this.state.gameLastResult;\n\n    return (\n      <div className=\"game\">\n        <div className=\"stats\">\n          <Counter\n            icon=\"‚è±\"\n            value={gameTimeLeft.toFixed(2)}\n            description=\"–æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è\"\n          />\n          <Counter\n            icon=\"‚ö°\"\n            value={gameCps.toFixed(2)}\n            description=\"–Ω–∞–∂–∞—Ç–∏–π –≤ —Å–µ–∫—É–Ω–¥—É\"\n          />\n          <Counter\n            icon=\"üö©\"\n            value={gameClicksCount}\n            description=\"–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–∂–∞—Ç–∏–π\"\n          />\n        </div>\n        <Field\n          className=\"field\"\n          text={this.generateFieldText()}\n          onClick={() => this.handleFieldClick()}\n        />\n        <div className=\"results\">\n          <Counter\n            icon=\"‚èÆ\"\n            value={gameLastResult.toFixed(2)}\n            description=\"–ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç\"\n          />\n          <Counter\n            icon=\"üèÜ\"\n            value={gameRecord.toFixed(2)}\n            description=\"–ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Game\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}